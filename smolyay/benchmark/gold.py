import numpy

from .benchmark import BenchmarkFunction

class gold(BenchmarkFunction):
    @property
    def domain(self):
        return [[-2.0, 2.0], [-2.0, 2.0]]

    def _function(self,x):
        v = numpy.zeros((x[...,0].size,5))
        v[...,0] = 1. + x[...,0]
        v[...,0] += x[...,1]
        v[...,1] = v[...,0] * v[...,0]
        v[...,0] = -14. * x[...,0]
        v[...,0] += 19.
        v[...,2] = x[...,0] * x[...,0]
        v[...,3] = 3. * v[...,2]
        v[...,0] += v[...,3]
        v[...,3] = -14. * x[...,1]
        v[...,0] += v[...,3]
        v[...,3] = 6. * x[...,0]
        v[...,2] = v[...,3] * x[...,1]
        v[...,0] += v[...,2]
        v[...,2] = x[...,1] * x[...,1]
        v[...,3] = 3. * v[...,2]
        v[...,0] += v[...,3]
        v[...,3] = v[...,1] * v[...,0]
        v[...,1] = 1. + v[...,3]
        v[...,3] = 2. * x[...,0]
        v[...,0] = -3. * x[...,1]
        v[...,2] = v[...,3] + v[...,0]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = -32. * x[...,0]
        v[...,2] += 18.
        v[...,0] = x[...,0] * x[...,0]
        v[...,4] = 12. * v[...,0]
        v[...,2] += v[...,4]
        v[...,4] = 48. * x[...,1]
        v[...,2] += v[...,4]
        v[...,4] = 36. * x[...,0]
        v[...,0] = v[...,4] * x[...,1]
        v[...,4] = v[...,2] - v[...,0]
        v[...,2] = x[...,1] * x[...,1]
        v[...,0] = 27. * v[...,2]
        v[...,2] = v[...,4] + v[...,0]
        v[...,4] = v[...,3] * v[...,2]
        v[...,3] = 30. + v[...,4]
        v[...,4] = v[...,1] * v[...,3]
        return v[...,4]
