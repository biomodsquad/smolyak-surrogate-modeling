import numpy

from .benchmark import BenchmarkFunction

class biggs3(BenchmarkFunction):
    @property
    def domain(self):
        return [[-9.0000000168, 9.89999998488],
                [-1.96500000271271e-07, 17.99999982315],
                [-5.0000001349, 13.49999987859]]

    @property
    def global_minimum(self):
        return 0
    
    @property
    def global_minimum_location(self):
        return [0.9999999832, 9.9999998035, 4.9999998651]

    def _function(self,x):
        v = numpy.zeros(list(x.shape[:-1]) + [4])
        v[...,0] = -0.1 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = -1.0764003502856656 + v[...,1]
        v[...,1] = -0.1 * x[...,1]
        v[...,2] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,2]
        v[...,2] = v[...,0] - v[...,1]
        v[...,0] = 2.0109601381069178 + v[...,2]
        v[...,2] = v[...,0] * v[...,0]
        v[...,0] = -0.2 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = -1.490041229246583 + v[...,1]
        v[...,1] = -0.2 * x[...,1]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = v[...,0] - v[...,1]
        v[...,0] = 1.3479868923516647 + v[...,3]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.30000000000000004 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = -1.3954655145790045 + v[...,0]
        v[...,0] = -0.30000000000000004 * x[...,1]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = v[...,3] - v[...,0]
        v[...,3] = 0.9035826357366061 + v[...,1]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -0.4 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = -1.1844314055759346 + v[...,3]
        v[...,3] = -0.4 * x[...,1]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = v[...,1] - v[...,3]
        v[...,1] = 0.6056895539839662 + v[...,0]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -0.5 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = -0.9788467744270443 + v[...,1]
        v[...,1] = -0.5 * x[...,1]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = v[...,0] - v[...,1]
        v[...,0] = 0.4060058497098381 + v[...,3]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.6000000000000001 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = -0.8085717350789321 + v[...,0]
        v[...,0] = -0.6000000000000001 * x[...,1]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = v[...,3] - v[...,0]
        v[...,3] = 0.2721538598682374 + v[...,1]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -0.7000000000000001 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = -0.6744560818392907 + v[...,3]
        v[...,3] = -0.7000000000000001 * x[...,1]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = v[...,1] - v[...,3]
        v[...,1] = 0.18243018787565385 + v[...,0]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -0.8 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = -0.5699382629128076 + v[...,1]
        v[...,1] = -0.8 * x[...,1]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = v[...,0] - v[...,1]
        v[...,0] = 0.12228661193509861 + v[...,3]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.9 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = -0.4879237780620434 + v[...,0]
        v[...,0] = -0.9 * x[...,1]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = v[...,3] - v[...,0]
        v[...,3] = 0.0819711673418777 + v[...,1]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = -0.4225993581888325 + v[...,3]
        v[...,3] = -x[...,1]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = v[...,1] - v[...,3]
        v[...,1] = 0.05494691666620255 + v[...,0]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -1.1 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = -0.3696195949033336 + v[...,1]
        v[...,1] = -1.1 * x[...,1]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = v[...,0] - v[...,1]
        v[...,0] = 0.03683201970920533 + v[...,3]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -1.2000000000000002 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = -0.3258527319974954 + v[...,0]
        v[...,0] = -1.2000000000000002 * x[...,1]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = v[...,3] - v[...,0]
        v[...,3] = 0.024689241147060066 + v[...,1]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -1.3 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = -0.28907018464926004 + v[...,3]
        v[...,3] = -1.3 * x[...,1]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = v[...,1] - v[...,3]
        v[...,1] = 0.01654969326228231 + v[...,0]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        return v[...,2]

class biggs5(BenchmarkFunction):
    @property
    def domain(self):
        return [[-8.9999996463, 9.90000031833],
                [-9.10100000695024E-07, 17.99999918091],
                [-8.999999498, 9.9000004518],
                [-4.999999779, 13.5000001989],
                [-5.999999158, 12.6000007578]]

    @property
    def global_minimum(self):
        return 0
    
    @property
    def global_minimum_location(self):
        return [1.0000003537, 9.9999990899, 1.000000502, 5.000000221, 4.000000842]

    def _function(self,x):
        # based on biggs6 replacing 6th variable with constant 3
        v = numpy.zeros(list(x.shape[:-1]) + [4])
        v[...,0] = -0.1 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -1.0764003502856656 + v[...,0]
        v[...,0] = -0.1 * x[...,1]
        v[...,2] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,2]
        v[...,2] = v[...,1] - v[...,0]
        v[...,1] = -0.1 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = 3 * v[...,0]
        v[...,0] = v[...,2] + v[...,1]
        v[...,2] = v[...,0] * v[...,0]
        v[...,0] = -0.2 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -1.490041229246583 + v[...,0]
        v[...,0] = -0.2 * x[...,1]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,3]
        v[...,3] = v[...,1] - v[...,0]
        v[...,1] = -0.2 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = 3 * v[...,0]
        v[...,0] = v[...,3] + v[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.30000000000000004 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = -1.3954655145790045 + v[...,3]
        v[...,3] = -0.30000000000000004 * x[...,1]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,3] * v[...,1]
        v[...,1] = v[...,0] - v[...,3]
        v[...,0] = -0.30000000000000004 * x[...,4]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = 3 * v[...,3]
        v[...,3] = v[...,1] + v[...,0]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -0.4 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = -1.1844314055759346 + v[...,1]
        v[...,1] = -0.4 * x[...,1]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,3] * v[...,0]
        v[...,0] = v[...,3] - v[...,1]
        v[...,3] = -0.4 * x[...,4]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = 3 * v[...,1]
        v[...,1] = v[...,0] + v[...,3]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -0.5 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -0.9788467744270443 + v[...,0]
        v[...,0] = -0.5 * x[...,1]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,3]
        v[...,3] = v[...,1] - v[...,0]
        v[...,1] = -0.5 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = 3 * v[...,0]
        v[...,0] = v[...,3] + v[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.6000000000000001 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = -0.8085717350789321 + v[...,3]
        v[...,3] = -0.6000000000000001 * x[...,1]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,3] * v[...,1]
        v[...,1] = v[...,0] - v[...,3]
        v[...,0] = -0.6000000000000001 * x[...,4]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = 3 * v[...,3]
        v[...,3] = v[...,1] + v[...,0]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -0.7000000000000001 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = -0.6744560818392907 + v[...,1]
        v[...,1] = -0.7000000000000001 * x[...,1]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,3] * v[...,0]
        v[...,0] = v[...,3] - v[...,1]
        v[...,3] = -0.7000000000000001 * x[...,4]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = 3 * v[...,1]
        v[...,1] = v[...,0] + v[...,3]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -0.8 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -0.5699382629128076 + v[...,0]
        v[...,0] = -0.8 * x[...,1]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,3]
        v[...,3] = v[...,1] - v[...,0]
        v[...,1] = -0.8 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = 3 * v[...,0]
        v[...,0] = v[...,3] + v[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.9 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = -0.4879237780620434 + v[...,3]
        v[...,3] = -0.9 * x[...,1]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,3] * v[...,1]
        v[...,1] = v[...,0] - v[...,3]
        v[...,0] = -0.9 * x[...,4]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = 3 * v[...,3]
        v[...,3] = v[...,1] + v[...,0]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = -0.4225993581888325 + v[...,1]
        v[...,1] = -x[...,1]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,3] * v[...,0]
        v[...,0] = v[...,3] - v[...,1]
        v[...,3] = -x[...,4]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = 3 * v[...,1]
        v[...,1] = v[...,0] + v[...,3]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -1.1 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -0.3696195949033336 + v[...,0]
        v[...,0] = -1.1 * x[...,1]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,3]
        v[...,3] = v[...,1] - v[...,0]
        v[...,1] = -1.1 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = 3 * v[...,0]
        v[...,0] = v[...,3] + v[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -1.2000000000000002 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = -0.3258527319974954 + v[...,3]
        v[...,3] = -1.2000000000000002 * x[...,1]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,3] * v[...,1]
        v[...,1] = v[...,0] - v[...,3]
        v[...,0] = -1.2000000000000002 * x[...,4]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = 3 * v[...,3]
        v[...,3] = v[...,1] + v[...,0]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -1.3 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = -0.28907018464926004 + v[...,1]
        v[...,1] = -1.3 * x[...,1]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,3] * v[...,0]
        v[...,0] = v[...,3] - v[...,1]
        v[...,3] = -1.3 * x[...,4]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = 3 * v[...,1]
        v[...,1] = v[...,0] + v[...,3]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        return v[...,2]

class biggs6(BenchmarkFunction):
    @property
    def domain(self):
        return [[-8.2885839998, 10.54027440018],
                [7.6831983277, 24.91487849493],
                [-3.05828543, 15.247543113], [-4.8134383873, 13.66790545143],
                [-8.2885839966, 10.54027440306],
                [-14.6154272503, 4.84611547473]]

    @property
    def global_minimum(self):
        return 0.0056556499
    
    @property
    def global_minimum_location(self):
        return [1.7114160002, 17.6831983277, 6.94171457, 5.1865616127, 1.7114160034, -4.6154272503]

    def _function(self,x):
        v = numpy.zeros(list(x.shape[:-1]) + [4])
        v[...,0] = -0.1 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -1.0764003502856656 + v[...,0]
        v[...,0] = -0.1 * x[...,1]
        v[...,2] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,2]
        v[...,2] = v[...,1] - v[...,0]
        v[...,1] = -0.1 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,5] * v[...,0]
        v[...,0] = v[...,2] + v[...,1]
        v[...,2] = v[...,0] * v[...,0]
        v[...,0] = -0.2 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -1.490041229246583 + v[...,0]
        v[...,0] = -0.2 * x[...,1]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,3]
        v[...,3] = v[...,1] - v[...,0]
        v[...,1] = -0.2 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,5] * v[...,0]
        v[...,0] = v[...,3] + v[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.30000000000000004 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = -1.3954655145790045 + v[...,3]
        v[...,3] = -0.30000000000000004 * x[...,1]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,3] * v[...,1]
        v[...,1] = v[...,0] - v[...,3]
        v[...,0] = -0.30000000000000004 * x[...,4]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,5] * v[...,3]
        v[...,3] = v[...,1] + v[...,0]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -0.4 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = -1.1844314055759346 + v[...,1]
        v[...,1] = -0.4 * x[...,1]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,3] * v[...,0]
        v[...,0] = v[...,3] - v[...,1]
        v[...,3] = -0.4 * x[...,4]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,5] * v[...,1]
        v[...,1] = v[...,0] + v[...,3]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -0.5 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -0.9788467744270443 + v[...,0]
        v[...,0] = -0.5 * x[...,1]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,3]
        v[...,3] = v[...,1] - v[...,0]
        v[...,1] = -0.5 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,5] * v[...,0]
        v[...,0] = v[...,3] + v[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.6000000000000001 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = -0.8085717350789321 + v[...,3]
        v[...,3] = -0.6000000000000001 * x[...,1]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,3] * v[...,1]
        v[...,1] = v[...,0] - v[...,3]
        v[...,0] = -0.6000000000000001 * x[...,4]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,5] * v[...,3]
        v[...,3] = v[...,1] + v[...,0]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -0.7000000000000001 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = -0.6744560818392907 + v[...,1]
        v[...,1] = -0.7000000000000001 * x[...,1]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,3] * v[...,0]
        v[...,0] = v[...,3] - v[...,1]
        v[...,3] = -0.7000000000000001 * x[...,4]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,5] * v[...,1]
        v[...,1] = v[...,0] + v[...,3]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -0.8 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -0.5699382629128076 + v[...,0]
        v[...,0] = -0.8 * x[...,1]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,3]
        v[...,3] = v[...,1] - v[...,0]
        v[...,1] = -0.8 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,5] * v[...,0]
        v[...,0] = v[...,3] + v[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -0.9 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = -0.4879237780620434 + v[...,3]
        v[...,3] = -0.9 * x[...,1]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,3] * v[...,1]
        v[...,1] = v[...,0] - v[...,3]
        v[...,0] = -0.9 * x[...,4]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,5] * v[...,3]
        v[...,3] = v[...,1] + v[...,0]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = -0.4225993581888325 + v[...,1]
        v[...,1] = -x[...,1]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,3] * v[...,0]
        v[...,0] = v[...,3] - v[...,1]
        v[...,3] = -x[...,4]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,5] * v[...,1]
        v[...,1] = v[...,0] + v[...,3]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        v[...,0] = -1.1 * x[...,0]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,2] * v[...,1]
        v[...,1] = -0.3696195949033336 + v[...,0]
        v[...,0] = -1.1 * x[...,1]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,3] * v[...,3]
        v[...,3] = v[...,1] - v[...,0]
        v[...,1] = -1.1 * x[...,4]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,5] * v[...,0]
        v[...,0] = v[...,3] + v[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,2] += v[...,3]
        v[...,3] = -1.2000000000000002 * x[...,0]
        v[...,0] = numpy.exp(v[...,3])
        v[...,3] = x[...,2] * v[...,0]
        v[...,0] = -0.3258527319974954 + v[...,3]
        v[...,3] = -1.2000000000000002 * x[...,1]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,3] * v[...,1]
        v[...,1] = v[...,0] - v[...,3]
        v[...,0] = -1.2000000000000002 * x[...,4]
        v[...,3] = numpy.exp(v[...,0])
        v[...,0] = x[...,5] * v[...,3]
        v[...,3] = v[...,1] + v[...,0]
        v[...,1] = v[...,3] * v[...,3]
        v[...,2] += v[...,1]
        v[...,1] = -1.3 * x[...,0]
        v[...,3] = numpy.exp(v[...,1])
        v[...,1] = x[...,2] * v[...,3]
        v[...,3] = -0.28907018464926004 + v[...,1]
        v[...,1] = -1.3 * x[...,1]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = x[...,3] * v[...,0]
        v[...,0] = v[...,3] - v[...,1]
        v[...,3] = -1.3 * x[...,4]
        v[...,1] = numpy.exp(v[...,3])
        v[...,3] = x[...,5] * v[...,1]
        v[...,1] = v[...,0] + v[...,3]
        v[...,0] = v[...,1] * v[...,1]
        v[...,2] += v[...,0]
        return v[...,2]

