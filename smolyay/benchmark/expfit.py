import numpy

from .benchmark import BenchmarkFunction

class expfit(BenchmarkFunction):
    @property
    def domain(self):
        return [[-9.5210154534, 9.43108609194], [-9.3116998055, 9.61947017505]]

    @property
    def global_minimum(self):
        return 0.240510594
    
    @property
    def global_minimum_location(self):
        return [ 0.4789845466, 0.6883001945 ]

    def _function(self,x):
        v = numpy.zeros(list(x.shape[:-1]) + [3])
        v[...,0] = 0.25 * x[...,1]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = x[...,0] * v[...,1]
        v[...,1] = -0.25 + v[...,0]
        v[...,0] = v[...,1] * v[...,1]
        v[...,1] = 0.5 * x[...,1]
        v[...,2] = numpy.exp(v[...,1])
        v[...,1] = x[...,0] * v[...,2]
        v[...,2] = -0.5 + v[...,1]
        v[...,1] = v[...,2] * v[...,2]
        v[...,0] += v[...,1]
        v[...,1] = 0.75 * x[...,1]
        v[...,2] = numpy.exp(v[...,1])
        v[...,1] = x[...,0] * v[...,2]
        v[...,2] = -0.75 + v[...,1]
        v[...,1] = v[...,2] * v[...,2]
        v[...,0] += v[...,1]
        v[...,1] = numpy.exp(x[...,1])
        v[...,2] = x[...,0] * v[...,1]
        v[...,1] = -1. + v[...,2]
        v[...,2] = v[...,1] * v[...,1]
        v[...,0] += v[...,2]
        v[...,2] = 1.25 * x[...,1]
        v[...,1] = numpy.exp(v[...,2])
        v[...,2] = x[...,0] * v[...,1]
        v[...,1] = -1.25 + v[...,2]
        v[...,2] = v[...,1] * v[...,1]
        v[...,0] += v[...,2]
        v[...,2] = 1.5 * x[...,1]
        v[...,1] = numpy.exp(v[...,2])
        v[...,2] = x[...,0] * v[...,1]
        v[...,1] = -1.5 + v[...,2]
        v[...,2] = v[...,1] * v[...,1]
        v[...,0] += v[...,2]
        v[...,2] = 1.75 * x[...,1]
        v[...,1] = numpy.exp(v[...,2])
        v[...,2] = x[...,0] * v[...,1]
        v[...,1] = -1.75 + v[...,2]
        v[...,2] = v[...,1] * v[...,1]
        v[...,0] += v[...,2]
        v[...,2] = 2. * x[...,1]
        v[...,1] = numpy.exp(v[...,2])
        v[...,2] = x[...,0] * v[...,1]
        v[...,1] = -2. + v[...,2]
        v[...,2] = v[...,1] * v[...,1]
        v[...,0] += v[...,2]
        v[...,2] = 2.25 * x[...,1]
        v[...,1] = numpy.exp(v[...,2])
        v[...,2] = x[...,0] * v[...,1]
        v[...,1] = -2.25 + v[...,2]
        v[...,2] = v[...,1] * v[...,1]
        v[...,0] += v[...,2]
        v[...,2] = 2.5 * x[...,1]
        v[...,1] = numpy.exp(v[...,2])
        v[...,2] = x[...,0] * v[...,1]
        v[...,1] = -2.5 + v[...,2]
        v[...,2] = v[...,1] * v[...,1]
        v[...,0] += v[...,2]
        return v[...,0]
