import numpy

from .benchmark import BenchmarkFunction

class hart6(BenchmarkFunction):
    @property
    def domain(self):
        return [[0, 1], [0, 1], [0, 1], [0, 1], [0, 1], [0, 1]]
        
    def _function(self,x):
        v = numpy.zeros((x[...,0].size,4))
        v[...,0] = -0.1312 + x[...,0]
        v[...,1] = v[...,0] * v[...,0]
        v[...,0] = 10. * v[...,1]
        v[...,1] = -0.1696 + x[...,1]
        v[...,2] = v[...,1] * v[...,1]
        v[...,1] = 0.05 * v[...,2]
        v[...,0] += v[...,1]
        v[...,1] = -0.5569 + x[...,2]
        v[...,2] = v[...,1] * v[...,1]
        v[...,1] = 17. * v[...,2]
        v[...,0] += v[...,1]
        v[...,1] = -0.0124 + x[...,3]
        v[...,2] = v[...,1] * v[...,1]
        v[...,1] = 3.5 * v[...,2]
        v[...,0] += v[...,1]
        v[...,1] = -0.8283 + x[...,4]
        v[...,2] = v[...,1] * v[...,1]
        v[...,1] = 1.7 * v[...,2]
        v[...,0] += v[...,1]
        v[...,1] = -0.5886 + x[...,5]
        v[...,2] = v[...,1] * v[...,1]
        v[...,1] = 8. * v[...,2]
        v[...,0] += v[...,1]
        v[...,1] = -v[...,0]
        v[...,0] = numpy.exp(v[...,1])
        v[...,1] = -v[...,0]
        v[...,0] = -0.2329 + x[...,0]
        v[...,2] = v[...,0] * v[...,0]
        v[...,0] = 0.05 * v[...,2]
        v[...,2] = -0.4135 + x[...,1]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 10. * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -0.8307 + x[...,2]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 17. * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -0.3736 + x[...,3]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 0.1 * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -0.1004 + x[...,4]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 8. * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -0.9991 + x[...,5]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 14. * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -v[...,0]
        v[...,0] = numpy.exp(v[...,2])
        v[...,2] = -1.2 * v[...,0]
        v[...,1] += v[...,2]
        v[...,2] = -0.2348 + x[...,0]
        v[...,0] = v[...,2] * v[...,2]
        v[...,2] = 3. * v[...,0]
        v[...,0] = -0.1451 + x[...,1]
        v[...,3] = v[...,0] * v[...,0]
        v[...,0] = 3.5 * v[...,3]
        v[...,2] += v[...,0]
        v[...,0] = -0.3522 + x[...,2]
        v[...,3] = v[...,0] * v[...,0]
        v[...,0] = 1.7 * v[...,3]
        v[...,2] += v[...,0]
        v[...,0] = -0.2883 + x[...,3]
        v[...,3] = v[...,0] * v[...,0]
        v[...,0] = 10. * v[...,3]
        v[...,2] += v[...,0]
        v[...,0] = -0.3047 + x[...,4]
        v[...,3] = v[...,0] * v[...,0]
        v[...,0] = 17. * v[...,3]
        v[...,2] += v[...,0]
        v[...,0] = -0.665 + x[...,5]
        v[...,3] = v[...,0] * v[...,0]
        v[...,0] = 8. * v[...,3]
        v[...,2] += v[...,0]
        v[...,0] = -v[...,2]
        v[...,2] = numpy.exp(v[...,0])
        v[...,0] = -3. * v[...,2]
        v[...,1] += v[...,0]
        v[...,0] = -0.4047 + x[...,0]
        v[...,2] = v[...,0] * v[...,0]
        v[...,0] = 17. * v[...,2]
        v[...,2] = -0.8828 + x[...,1]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 8. * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -0.8732 + x[...,2]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 0.05 * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -0.5743 + x[...,3]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 10. * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -0.1091 + x[...,4]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 0.1 * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -0.0381 + x[...,5]
        v[...,3] = v[...,2] * v[...,2]
        v[...,2] = 14. * v[...,3]
        v[...,0] += v[...,2]
        v[...,2] = -v[...,0]
        v[...,0] = numpy.exp(v[...,2])
        v[...,2] = -3.2 * v[...,0]
        v[...,1] += v[...,2]
        return v[...,1]
