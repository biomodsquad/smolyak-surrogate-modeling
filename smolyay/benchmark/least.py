import numpy

from .benchmark import BenchmarkFunction

class least(BenchmarkFunction):
    @property
    def domain(self):
        return [[473.98605675534, 506.6511741726],
                [-159.3518936954, -125.41670432586],[-5, 4.5]]

    def _function(self,x):
        v = numpy.zeros(list(x.shape[:-1]) + [3])
        v[...,0] = -5. * x[...,2]
        v[...,1] = numpy.exp(v[...,0])
        v[...,0] = v[...,1] * x[...,1]
        v[...,1] = 127. - v[...,0]
        v[...,0] = v[...,1] - x[...,0]
        v[...,1] = v[...,0] * v[...,0]
        v[...,0] = -3. * x[...,2]
        v[...,2] = numpy.exp(v[...,0])
        v[...,0] = v[...,2] * x[...,1]
        v[...,2] = 151. - v[...,0]
        v[...,0] = v[...,2] - x[...,0]
        v[...,2] = v[...,0] * v[...,0]
        v[...,1] += v[...,2]
        v[...,2] = -x[...,2]
        v[...,0] = numpy.exp(v[...,2])
        v[...,2] = v[...,0] * x[...,1]
        v[...,0] = 379. - v[...,2]
        v[...,2] = v[...,0] - x[...,0]
        v[...,0] = v[...,2] * v[...,2]
        v[...,1] += v[...,0]
        v[...,0] = 5. * x[...,2]
        v[...,2] = numpy.exp(v[...,0])
        v[...,0] = v[...,2] * x[...,1]
        v[...,2] = 421. - v[...,0]
        v[...,0] = v[...,2] - x[...,0]
        v[...,2] = v[...,0] * v[...,0]
        v[...,1] += v[...,2]
        v[...,2] = 3. * x[...,2]
        v[...,0] = numpy.exp(v[...,2])
        v[...,2] = v[...,0] * x[...,1]
        v[...,0] = 460. - v[...,2]
        v[...,2] = v[...,0] - x[...,0]
        v[...,0] = v[...,2] * v[...,2]
        v[...,1] += v[...,0]
        v[...,0] = numpy.exp(x[...,2])
        v[...,2] = v[...,0] * x[...,1]
        v[...,0] = 426. - v[...,2]
        v[...,2] = v[...,0] - x[...,0]
        v[...,0] = v[...,2] * v[...,2]
        v[...,1] += v[...,0]
        return v[...,1]
