import numpy

from .benchmark import BenchmarkFunction

class engval2(BenchmarkFunction):
    @property
    def domain(self):
        return [[-10.0, 9.0], [-10.0, 9.0], [-9.0, 9.9]]

    def _function(self,x):
        v = numpy.zeros(list(x.shape[:-1]) + [4])
        v[...,0] = x[...,0] * x[...,0]
        v[...,1] = x[...,1] * x[...,1]
        v[...,0] += v[...,1]
        v[...,1] = x[...,2] * x[...,2]
        v[...,0] += v[...,1]
        v[...,1] = -1. + v[...,0]
        v[...,0] = v[...,1] * v[...,1]
        v[...,1] = x[...,0] * x[...,0]
        v[...,2] = x[...,1] * x[...,1]
        v[...,1] += v[...,2]
        v[...,2] = -2. + x[...,2]
        v[...,3] = v[...,2] * v[...,2]
        v[...,1] += v[...,3]
        v[...,3] = -1. + v[...,1]
        v[...,1] = v[...,3] * v[...,3]
        v[...,0] += v[...,1]
        v[...,1] = x[...,0] + x[...,1]
        v[...,1] += x[...,2]
        v[...,3] = -1. + v[...,1]
        v[...,1] = v[...,3] * v[...,3]
        v[...,0] += v[...,1]
        v[...,1] = x[...,0] + x[...,1]
        v[...,3] = v[...,1] - x[...,2]
        v[...,1] = 1. + v[...,3]
        v[...,3] = v[...,1] * v[...,1]
        v[...,0] += v[...,3]
        v[...,3] = x[...,1] * x[...,1]
        v[...,1] = 3. * v[...,3]
        v[...,3] = pow(x[...,0], 3)
        v[...,1] += v[...,3]
        v[...,3] = 5. * x[...,2]
        v[...,2] = v[...,3] - x[...,0]
        v[...,3] = 1. + v[...,2]
        v[...,2] = v[...,3] * v[...,3]
        v[...,1] += v[...,2]
        v[...,2] = -36. + v[...,1]
        v[...,1] = v[...,2] * v[...,2]
        v[...,0] += v[...,1]
        return v[...,0]
