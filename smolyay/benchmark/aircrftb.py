import numpy

from .benchmark import BenchmarkFunction

class aircrftb(BenchmarkFunction):
    @property
    def domain(self):
        return [[-10.9654790084, 8.13106889244], [-9.9364470184, 9.05719768344], [-10.0579260446, 8.94786655986], [-9.9385332696, 9.05532005736], [-10.0108611902, 8.99022492882]]

    @property
    def global_minimum(self):
        return 0
    
    @property
    def global_minimum_location(self):
        return [ -0.9654790084, 0.0635529816, -0.0579260446, 0.0614667304, -0.0108611902 ]

    def _function(self,x):
        v = numpy.zeros(list(x.shape[:-1]) + [18])
        v[...,8] = -4.583 - 3.933*x[...,0]
        v[...,8] += 0.107*x[...,1]
        v[...,8] += 0.126*x[...,2]
        v[...,8] -= 9.99*x[...,4]

        v[...,9] = 1.4185 - 0.987*x[...,1]
        v[...,9] -= 22.95*x[...,3]

        v[...,10] = -0.09210000000000002 + 0.002*x[...,0]
        v[...,10] -= 0.235*x[...,2]
        v[...,10] += 5.67*x[...,4]

        v[...,11] = 0.008400000000000001 + x[...,1]
        v[...,11] -= x[...,3]

        v[...,12] = -0.0007100000000000001 - x[...,2]
        v[...,12] -= 0.196*x[...,4]

        v[...,0] = -0.727 * x[...,1]
        v[...,1] = v[...,0] * x[...,2]
        v[...,0] = 8.39 * x[...,2]
        v[...,2] = v[...,0] * x[...,3]
        v[...,13] = v[...,1] + v[...,2]
        v[...,2] = 684.4 * x[...,3]
        v[...,0] = v[...,2] * x[...,4]
        v[...,2] = -v[...,0]
        v[...,13] += v[...,2]
        v[...,2] = 63.5 * x[...,3]
        v[...,0] = v[...,2] * x[...,1]
        v[...,13] += v[...,0]

        v[...,0] = 0.949 * x[...,0]
        v[...,2] = v[...,0] * x[...,2]
        v[...,0] = 0.173 * x[...,0]
        v[...,3] = v[...,0] * x[...,4]
        v[...,14] = v[...,2] + v[...,3]

        v[...,2] = -0.716 * x[...,0]
        v[...,3] = v[...,2] * x[...,1]
        v[...,2] = 1.578 * x[...,0]
        v[...,4] = v[...,2] * x[...,3]
        v[...,2] = -v[...,4]
        v[...,15] = v[...,3] + v[...,2]
        v[...,2] = 1.132 * x[...,3]
        v[...,4] = v[...,2] * x[...,1]
        v[...,15] += v[...,4]

        v[...,4] = x[...,0] * x[...,4]
        v[...,16] = -v[...,4]
        
        v[...,17] = x[...,0] * x[...,3]

        v[...,5] = v[...,8] + v[...,13]
        v[...,6] = v[...,5] * v[...,5]
        v[...,5] = v[...,9] + v[...,14]
        v[...,7] = v[...,5] * v[...,5]
        v[...,6] += v[...,7]
        v[...,7] = v[...,10] + v[...,15]
        v[...,5] = v[...,7] * v[...,7]
        v[...,6] += v[...,5]
        v[...,5] = v[...,11] + v[...,16]
        v[...,7] = v[...,5] * v[...,5]
        v[...,6] += v[...,7]
        v[...,7] = v[...,12] + v[...,17]
        v[...,5] = v[...,7] * v[...,7]
        v[...,6] += v[...,5]
        return v[...,6]
